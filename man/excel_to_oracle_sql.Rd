% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excel_to_oracle_sql.R
\name{excel_to_oracle_sql}
\alias{excel_to_oracle_sql}
\title{Convert Excel data to Oracle SQL CREATE TABLE and INSERT statements}
\usage{
excel_to_oracle_sql(
  excel_path,
  sheet = 1,
  sql_output = "output_script.sql",
  table_name = "MY_TABLE",
  column_types = list(),
  round_column = NULL,
  round_multiplier = 1000,
  add_index = FALSE,
  index_name = "id",
  batch_size = 1000,
  use_merge = FALSE
)
}
\arguments{
\item{excel_path}{Character string. Path to the Excel file.}

\item{sheet}{Integer or character string. Sheet number or name to read (default: 1).}

\item{sql_output}{Character string. Output SQL file path (default: "output_script.sql").}

\item{table_name}{Character string. Name of the Oracle table to create (default: "MY_TABLE").}

\item{column_types}{Named list. Custom Oracle column types (e.g., list(TTT = "VARCHAR2(9 BYTE)")).}

\item{round_column}{Character string. Column name to apply rounding transformation.}

\item{round_multiplier}{Numeric. Multiplier for rounding operation (default: 1000).}

\item{add_index}{Logical. Whether to add an auto-increment index column (default: FALSE).}

\item{index_name}{Character string. Name of the index column if add_index = TRUE (default: "id").}

\item{batch_size}{Integer. Number of INSERT statements per batch for performance (default: 1000).}

\item{use_merge}{Logical. Use MERGE statements instead of INSERT for upsert operations (default: FALSE).}
}
\value{
Invisible. Function is called for side effects (writing SQL file).
}
\description{
This function reads an Excel file and generates a complete Oracle SQL script
including DROP TABLE, CREATE TABLE, and INSERT statements. It supports
custom column types, automatic type inference, data transformation, and
optimized bulk operations.
}
\details{
Generate Oracle SQL script from Excel data
}
